/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Sassy stuff
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

@function calcEm($target, $context) {
  @return ( $target / $context ) + em;
}

@function calcPercent($target, $context) {
  @return ($target / $context) * 100%;
}

@mixin prefix($property, $value) {
  -webkit-#{$property}: $value;
     -moz-#{$property}: $value;
      -ms-#{$property}: $value;
       -o-#{$property}: $value;
          #{$property}: $value;
}

// grabbing list style from Sassparilla but making them extends instead of mixins
%unordered {
   list-style-position: outside; 
   list-style-type: disc;
}

%unordered-inside {
   list-style-position: inside; 
   list-style-type: disc;
}

%ordered {
  list-style-position: outside; 
  list-style-type: decimal;
}

%ordered-inside {
  list-style-position: inside; 
  list-style-type: decimal;
}

%nobullet {
  list-style-type: none;
}

%inlineBlock{
  display: -moz-inline-stack;
  display: inline-block;
  zoom: 1;
  *display: inline;
  vertical-align: top;
}

%borderBox {
   -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
           box-sizing: border-box;
}

%grid {
  @extend %inlineBlock;
  position: relative;
  float: left;
}

// create these grids
$gridList: (2, 3, 4);

@for $grids from min( $gridList... ) through max( $gridList... ){

  @for $columns from 1 through $grids {
    $columnWidth: round($columns / $grids * 100%);
    %col-#{$columns}-#{$grids} { @extend %grid; width: $columnWidth; }
  }
}

*, *:after, *:before {
  @extend %borderBox;
}

/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Variables
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

$anchor:          #212a29; 
$support:         #63908d;
$link:            lighten($anchor, 10%);
$support-link:    lighten($support, 5%);
$hover:           lighten($link, 50%);
$support-hover:   lighten($support, 15%);
$copy:            lighten($anchor, 3%);


/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Global bits
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

html {
  border-top: .2em solid $support;
}

body {
  font-weight: 400;
  font-size: 1em;
  line-height: 1.5em;
  color: $copy;
}

ul {
  list-style-type: none;
}

a {
  text-decoration: none;
  color: $link;
  &:hover {
    color: $hover;
  }
}

a, a:link, a:visited, a:active {
  @include prefix(transition, color 0.3s ease-in-out);
}

img, embed, object, video {
  max-width: 100%;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 400;
  header & {
    margin: .2em 0;
  }
}

article {
  margin: 1em 0 4em 0;
  &:after {
    content: "\f19d";
    font-family: "Ionicons";
    text-align: center;
    font-size: calcEm( 64, 16);
    display: block;
    padding: 3em 0;
    margin-top: 1em;
    color: lighten($anchor, 60%);
    border-top: 1px dotted lighten($anchor, 60%);
    border-bottom: 1px dotted lighten($anchor, 60%);
  }
  header {
    margin-bottom: 1em;
    &:after {
      content: "\f154 \f154 \f154 \f154 \f154";
      font-family: "Ionicons";
      display: block;
      color: lighten($anchor, 70%);
      margin: .3em 0 2em 0;
      font-size: calcEm( 18, 16);
    }
  }
  h1 {
    line-height: 1em;
  }
  h2 {
    font-size: calcEm( 18, 16);
    color: lighten($anchor, 30%);
  }
  p {
    margin: 1.5em 0;
    font-size: calcEm( 18, 16);
    line-height: 1.5em;
    a {
      color: $support-link;
      &:hover {
        color: $support-hover;
      }
    }
  }
  blockquote {
    position: relative;
    font-weight: 300;
    font-size: calcEm( 24, 16);
    font-style: italic;
    margin: 1em 0;
    line-height: 1.5em;
    color: lighten($copy, 20%);
    &:before, &:after {
      position: absolute;
      color: lighten($anchor, 60%);
      z-index: -10;
      font-size: calcEm( 148, 16);
      opacity: .4;
    }
    &:before {
      content: "\201C";
      top: .3em;
      left: -.2em;
    }
    &:after {
      content: "\201D";
      bottom: -.3em;
      right: .1em;
    }
    &> p {
      padding: .2em 0;
    }
    &+ p {
      font-weight: 300;
      margin-bottom: 2em;
      font-size: calcEm( 18, 16);
      line-height: 1.4em;
      color: lighten($anchor, 60%);
    }
  }
  .caption {
    font-size: calcEm( 14, 16);
    margin: 0 0 1em 0;
  }
  .questions {
    background: lighten($anchor, 70%);
  }
}

article {
  padding: 1em 2em;
}

time, sup, header h2 span,.global span, h1 span {
  color: lighten($anchor, 60%);
}

.imprint {
  clear: both;
  background: lighten($anchor, 65%);
  padding: 2em 2em 3em 2em;
  border-top: 1px solid #FFF;
  h2, .meta {
    text-transform: uppercase;
    font-weight: 700;
    letter-spacing: 1px;
    margin-bottom: .2em;
  }
  h2 {
    font-size: calcEm( 14, 16);
  }
  .meta {
    font-size: calcEm( 12, 16);
    span {
      padding-right: 1em;
    }
  }
  img {
    float: left;
    margin-right: 1.9em;
    margin-top: 1.4em;
    margin-bottom: 3em;
    border-radius: 5em;
    background: #FFF;
    padding: .5em;
  }
  a {
    &:hover {
      color: #FFF;
    }
  }
}

.pagination {
  margin: 0;
  padding: 0;
  .past, .now {
    a {
      @include prefix(transition, background 0.3s ease-in-out);
      @extend %col-1-2;
      font-weight: 700;
      text-transform: uppercase;
      font-size: calcEm( 11, 16 );
      &:hover {
        background: lighten($anchor, 60%);
        color: $copy;
      }
    }
  }
  .past a {
    text-align: right;
    padding: 1em 2em 1em 0;
    float: right;
  }
  .now a {
    padding: 1em 0 1em 2em;
    float: left;
  }
}







.pnts {
  font-style: italic;
  font-size: calcEm( 18, 16);
  font-weight: 300;
  text-align: center;
  border-bottom: 1px dotted $hover;
  padding: .5em 0;
}