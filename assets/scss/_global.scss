/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Functions
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

@function calcEm($target, $context) {
  @return ( $target / $context ) + em;
}

@function calcPercent($target, $context) {
  @return ($target / $context) * 100%;
}

/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Variables
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

$anchor           :#212a29; 
$support          :#63908d;
$link             :lighten($anchor, 10%);
$support-link     :lighten($support, 5%);
$hover            :lighten($link, 50%);
$support-hover    :lighten($support, 15%);
$copy             :lighten($anchor, 3%);

$desktop          :calcEm(1190, 16);
$portrait         :calcEm(768, 16);


/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Mixins
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

@mixin prefix($property, $value) {
  -webkit-#{$property}: $value;
     -moz-#{$property}: $value;
      -ms-#{$property}: $value;
       -o-#{$property}: $value;
          #{$property}: $value;
}

@mixin breakpoint( $point ) {
  @if $point == portrait {
    @media ( min-width: $portrait) { @content; }
  }
  @else if $point == desktop {
    @media ( min-width: $desktop ) { @content; }
  }
}

@mixin largescreen() {
  width: 66%;
  margin-left: 33%;
  margin-right: 2%;
  max-width: 45em;
}

/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Extends
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

// grabbing list style from Sassparilla but making them extends instead of mixins
%unordered {
   list-style-position: outside; 
   list-style-type: disc;
}

%unordered-inside {
   list-style-position: inside; 
   list-style-type: disc;
}

%ordered {
  list-style-position: outside; 
  list-style-type: decimal;
}

%ordered-inside {
  list-style-position: inside; 
  list-style-type: decimal;
}

%nobullet {
  list-style-type: none;
}

%inlineBlock{
  display: -moz-inline-stack;
  display: inline-block;
  zoom: 1;
  *display: inline;
  vertical-align: top;
}

%borderBox {
   -webkit-box-sizing: border-box;
      -moz-box-sizing: border-box;
           box-sizing: border-box;
}

%grid {
  @extend %inlineBlock;
  position: relative;
  float: left;
}

/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Gridsy
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

$gridList: (2, 3, 4);

@for $grids from min( $gridList... ) through max( $gridList... ) {
  @for $columns from 1 through $grids {
    $columnWidth: round($columns / $grids * 100%);
    %col-#{$columns}-#{$grids} { @extend %grid; width: $columnWidth; }
  }
}

/*
::::::::::::::::::::::::::::::::::::::::::::::::::
  =Utilize all the things
::::::::::::::::::::::::::::::::::::::::::::::::::      
*/

*, *:after, *:before {
  @extend %borderBox;
}

html {
  border-top: .2em solid $support;
  @include breakpoint(portrait) {
    border-top: none;
  }
}

body {
  font-weight: 400;
  font-size: 1em;
  line-height: 1.5em;
  color: $copy;
}

ul {
  list-style-type: none;
}

a {
  text-decoration: none;
  color: $link;
  &:hover {
    color: $hover;
  }
}

a, a:link, a:visited, a:active {
  @include prefix(transition, color 0.3s ease-in-out);
}

img, embed, object, video {
  max-width: 100%;
}

h1, h2, h3, h4, h5, h6 {
  font-weight: 400;
  header & {
    margin: .2em 0;
  }
}

article {
  margin: 1em 0 4em 0;
  padding: 1em 2em;
  &:after {
    display: block;
    margin-top: 1em;
    border-top: 1px dotted lighten($anchor, 60%);
    border-bottom: 1px dotted lighten($anchor, 60%);
    padding: 4em 0;
    content: "\f19d";
    font-family: "Ionicons";
    text-align: center;
    font-size: calcEm( 64, 16);
    color: lighten($anchor, 60%);
  }
  header {
    margin-bottom: 1em;
  }
  h1 {
    line-height: 1.2em;
  }
  h2 {
    font-size: calcEm( 18, 16);
    color: lighten($anchor, 30%);
  }
  p {
    margin: 1.5em 0;
    font-size: calcEm( 18, 16);
    line-height: 1.5em;
    a {
      color: $support-link;
      &:hover {
        color: $support-hover;
      }
    }
  }
  blockquote {
    position: relative;
    margin: 1em 0;
    font-weight: 300;
    font-size: calcEm( 24, 16);
    font-style: italic;
    line-height: 1.5em;
    color: lighten($copy, 20%);
    &:before, &:after {
      position: absolute;
      color: lighten($anchor, 60%);
      z-index: -10;
      font-size: calcEm( 148, 16);
      opacity: .4;
    }
    &:before {
      content: "\201C";
      top: .3em;
      left: -.2em;
    }
    &:after {
      content: "\201D";
      bottom: -.3em;
      right: .1em;
    }
    &> p {
      padding: .2em 0;
    }
    &+ p {
      font-weight: 300;
      margin-bottom: 2em;
      font-size: calcEm( 18, 16);
      line-height: 1.4em;
      color: lighten($anchor, 60%);
    }
  }
  .caption {
    font-size: calcEm( 14, 16);
    margin: 0 0 1em 0;
  }
  .questions {
    background: lighten($anchor, 70%);
  }
  @include breakpoint(portrait) {
    @include largescreen();
  }
  @include breakpoint(desktop) {  
    margin-left: 28em;
  }
}

.pagination {
  margin: 0;
  padding: 0;
  .past, .now {
    a {
      @include prefix(transition, background 0.3s ease-in-out);
      @extend %col-1-2;
      font-weight: 700;
      text-transform: uppercase;
      font-size: calcEm( 11, 16 );
      &:hover {
        background: lighten($anchor, 60%);
        color: $copy;
      }
    }
  }
  .past a {
    padding: 1em 2em 1em 0;
    float: right;
    text-align: right;
  }
  .now a {
    padding: 1em 0 1em 2em;
    float: left;
  }
  @include breakpoint(portrait) {
    @include largescreen();
  }
  @include breakpoint(desktop) {  
    margin-left: 28em;
  }
}

time, sup, header h2 span,.global span, h1 span {
  color: lighten($anchor, 60%);
}

.imprint {
  border-top: 1px solid #444;
  clear: both;
  background-image: url(../img/space/saturn.jpg);
  background-color: #000;
  background-repeat: no-repeat;
  .inner {
    padding: 2em 2em 3em 2em;
    color: #EFEFEF;
    //background: transparentize( #000, .5);
  }
  h2, .meta {
    margin-bottom: .2em;
    text-transform: uppercase;
    font-weight: 700;
    letter-spacing: 1px;
  }
  h2 {
    font-size: calcEm( 14, 16);
  }
  .meta {
    font-size: calcEm( 12, 16);
    span {
      padding-right: 1em;
    }
  }
  img {
    margin: 1.4em 1.9em 3em 0;
    border-radius: 5em;
    padding: .5em;
    float: left;
    background: #FFF;
  }
  a {
    color: hsl(51, 57.0248%, 80.2745%);
    &:hover {
      color: #FFF;
    }
  }
  ul {
    margin: 0;
    li {
      display: inline;
      padding-right: 1em;
    }
  }
  @include breakpoint(portrait) {
    max-width: 25em;
    width: 33%;
    position: fixed;
    top: 0;
    bottom: 0;
    border-top: none;
    border-right: .5em solid transparentize( #000, .8);
    img {
      display: block;
      float: none;
      margin: 0 auto 1em auto;
    }
    span, ul {
      display: block;
      text-align: center;
    }
    ul {
      padding: 0;
    }
    .inner {
      position: absolute;
      bottom: 0;
    }
  }
}

.pnts {
  border-bottom: 1px dotted $hover;
  padding: .5em 0;
  font-style: italic;
  font-size: calcEm( 18, 16);
  font-weight: 300;
  text-align: center;
  @include breakpoint(portrait) {
    display: none;
  }
}